#!@SHELL@

# This script gets called by the ./build* scripts
# which generate our two main standalone support apps
#
#    src/app/lex/build-lex-app
#    src/app/yacc/build-yacc-app
#
# plus various other standalone support apps
#
#    src/lib/compiler/back/low/tools/nowhere/build-nowhere-app
#    src/app/burg/build-mythryl-burg-fraser-hanson-proebsting-92-optimal-tree-rewriter-app
#    src/app/heap2asm/build-heap2asm-app
#    src/app/c-glue-maker/build-c-glue-maker-app
#
# We do various minor wrapper-type stuff here, then
# invoke mythryld with the
#
#     --build-an-executable-mythryl-heap-image
#
# kludge that triggers execution of our second half,
# the function
#
#    build_an_executable_mythryl_heap_image
#
# in
#
#    src/app/makelib/main/makelib-g.pkg
#
# When the heap image constructed by this script is run,
# it in essence starts execution at
#
#    wrap() 
# in
#    src/lib/std/src/nj/wrap-export.pkg
#
# which runs any registered  at::STARTUP_PHASE_*  fns and then
# invokes the fn given as 'main' below.


if [ x${LIB7_HOME} = x ] ; then
    BIN_DIR="@BIN_DIR@"
else
    BIN_DIR=${LIB7_HOME}/bin
fi

MYTHRYLD=$BIN_DIR/mythryld
LD7=$BIN_DIR/mythryl-ld

this_script=$0

echo " _build-an-executable-mythryl-heap-image:   Starting."

xx=$$
pkgfile=tmp-makelib-pid-$xx-export.pkg
libfile=tmp-makelib-pid-$xx-export.lib
listfile=tmp-makelib-pid-$xx.COMPILED_FILES_TO_LOAD
linkargsfile=tmp-makelib-pid-$xx.LINKARGS

dulist=''

# XXX BUGGO UNCOMMENTME
# trap 'rm -rf $pkgfile $libfile $listfile $linkargsfile' 0 1 2 3 15

usage() {
    echo ${this_script}: $*
    echo Usage: $this_script '[-S setup] root-group [main-function [heapfile]]'
    exit 1
}

setup=
root_anchor= # This is configured by make-install

while [ $# != 0 ] ; do
    case "$1" in
    -D*|-U*|-C*)
	dulist="$dulist $1"
	shift
	;;
    -S)
	shift
	if [ $# = 0 ] ; then
	    usage missing argument for -S
	fi
	setup=$1
	shift
	;;
    --set-root-anchor)
	shift
	if [ $# = 0 ] ; then
	    usage missing argument for --set-root-anchor
	fi
	root_anchor="$1"
	shift
	;;
    --) shift; break ;;
    *)
	break
	;;
    esac
done

if [ $# = 4 ] ; then
    setup=$1
    root=$2
    main=$3
echo " _build-an-executable-mythryl-heap-image:   main=$main (I)"
    heap=$4
elif [ $# = 3 ] ; then
    root=$1
    main=$2
echo " _build-an-executable-mythryl-heap-image:   main=$main (II)"
    heap=$3
elif [ $# = 2 ] ; then
    root=$1
    main=$2
echo " _build-an-executable-mythryl-heap-image:   main=$main (III)"
    heap=`basename "$root" .lib`
elif [ $# = 1 ] ; then
    root=$1
    # quick hack for now:
    main=Test::main
    heap=`basename "$root" .lib`
else
    usage 'No .lib file specified!'
fi
main=`echo "$main"|sed -e 's/\./::/g'`
echo " _build-an-executable-mythryl-heap-image:   main=$main (after sed)"
# main="main::main" # XXX BUGGO REMOVEME!

rare_string=xyzzy_plugh

cat >$pkgfile <<EOF
package ${rare_string} { my _ = lib7::spawn_to_disk ("${heap}", ${main}); };
EOF

echo " _build-an-executable-mythryl-heap-image:   Listing $pkgfile:"
echo
cat $pkgfile
echo

cat >$libfile <<EOF
LIBRARY_EXPORTS pkg ${rare_string} LIBRARY_COMPONENTS \$ROOT/src/lib/std/standard.lib ${root} ${pkgfile}
EOF

echo " _build-an-executable-mythryl-heap-image:   Listing libfile:"
echo
cat $libfile
echo

# Invoke mythryld with the '--build-an-executable-mythryl-heap-image' kludge
# that triggers execution of our second half, which is embedded in
#    src/app/makelib/main/makelib-g.pkg
# as the function
#     build_an_executable_mythryl_heap_image           XXX SUCKO FIXME -- should be a   mythryld -e '...'   or such.
#
# Unless the heap image exists and is up-to-date, build_an_executable_mythryl_heap_image
# will write the arguments for mythryl-ld into $linkargsfile.
#

if [ -z "$root_anchor" ]; then
    echo " _build-an-executable-mythryl-heap-image:   Doing:                  \"$MYTHRYLD\" $dulist --build-an-executable-mythryl-heap-image $setup \"$root\" \"$libfile\" \"$heap\" \"$listfile\" \"$linkargsfile\""
    "$MYTHRYLD" $dulist --build-an-executable-mythryl-heap-image $setup "$root" "$libfile" "$heap" "$listfile" "$linkargsfile" || exit $?
else
    echo " _build-an-executable-mythryl-heap-image:   Doing:                  \"$MYTHRYLD\" $dulist --set-root-anchor \"$root_anchor\" --build-an-executable-mythryl-heap-image $setup \"$root\" \"$libfile\" \"$heap\" \"$listfile\" \"$linkargsfile\""
    "$MYTHRYLD" $dulist --set-root-anchor "$root_anchor" --build-an-executable-mythryl-heap-image $setup "$root" "$libfile" "$heap" "$listfile" "$linkargsfile" || exit $?
fi

if [ -r "$linkargsfile" ]; then
    echo " _build-an-executable-mythryl-heap-image:   Doing:  	              \"$LD7\" \`cat \"$linkargsfile\"\`"
    "$LD7" `cat "$linkargsfile"`
    chmod +x "$heap"
fi
